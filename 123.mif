-- Copyright (C) 2017  Intel Corporation. All rights reserved.
-- Your use of Intel Corporation's design tools, logic functions
-- and other software and tools, and its AMPP partner logic
-- functions, and any output files from any of the foregoing
-- (including device programming or simulation files), and any
-- associated documentation or information are expressly subject
-- to the terms and conditions of the Intel Program License
-- Subscription Agreement, the Intel Quartus Prime License Agreement,
-- the Intel FPGA IP License Agreement, or other applicable license
-- agreement, including, without limitation, that your use is for
-- the sole purpose of programming logic devices manufactured by
-- Intel and sold by Intel or its authorized distributors.  Please
-- refer to the applicable agreement for further details.

WIDTH=32;
DEPTH=64;
ADDRESS_RADIX=DEC;
DATA_RADIX=HEX;

CONTENT BEGIN
      -- Valores iniciais no banco de registradores:
      -- $zero (#0) := 0x00
      -- $t0   (#8) := 0x00
      -- $t1   (#9) := 0x0A
      -- $t2  (#10) := 0x0B
      -- $t3  (#11) := 0x0C
      -- $t4  (#12) := 0x0D
      -- $t5  (#13) := 0x16

    0    :   AC090008; --sw $t1 8($zero)     (m(8) := 0x0000000A)  101011 00000 01001 x0008
    1    :   8C080008; --lw $t0 8($zero)     ($t0 := 0x0000000A)   100011 00000 01000 x0008
    2    :   012A4022; --sub $t0 $t1 $t2     ($t0 := 0xFFFFFFFF)   000000 01001 01010 01000 00000 100010
    3    :   012A4024; --and $t0 $t1 $t2     ($t0 := 0x0000000A)   000000 01001 01010 01000 00000 100100
    4    :   012A4025; --or $t0 $t1 $t2      ($t0 := 0x0000000B)   000000 01001 01010 01000 00000 100101
    5    :   012A402A; --slt $t0 $t1 $t2     ($t0 := 0x00000001)   000000 01001 01010 01000 00000 101010
    6    :   010A4020; --add $t0 $t0 $t2     HAZARD     ($t0 := 0x0000000A)   000000 01000 01010 01000 00000 100000
    7    :   110BFFFE; --beq $t0 $t3 0xFFFE  HAZARD     (pc := #8)
    8    :   0800000C; --j 0x00000C          HAZARD     (pc := #12)

    12   :   AC090008; --sw $t1 8($zero)     (m(8) := 0x0000000A)  101011 00000 01001 x0008
    13   :   8C080008; --lw $t0 8($zero)     ($t0 := 0x0000000A)   100011 00000 01000 x0008
    14   :   012A4022; --sub $t0 $t1 $t2     ($t0 := 0xFFFFFFFF)   000000 01001 01010 01000 00000 100010
    15   :   012A4024; --and $t0 $t1 $t2     ($t0 := 0x0000000A)   000000 01001 01010 01000 00000 100100
    16   :   012A4025; --or $t0 $t1 $t2      ($t0 := 0x0000000B)   000000 01001 01010 01000 00000 100101
    17   :   012A402A; --slt $t0 $t1 $t2     ($t0 := 0x00000001)   000000 01001 01010 01000 00000 101010
    -- NOP x3
    21   :   010A4020; --add $t0 $t0 $t2     ($t0 := 0x0000000C)   000000 01000 01010 01000 00000 100000
            -- segunda execução ($t0 := 0x00000017)
    -- NOP x3
    25   :   110BFFFB; --beq $t0 $t3 0xFFFB  (pc := #21)
            -- segunda execução (pc := #26)
    -- NOP x2
    28   :   08000000; --j 0x000000          (pc := #0)
END;
